{
    "$schema": "http://json-schema.org/schema#",
    "type": "object",
    "properties": {
        "dashboard": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object"
                },
                "create": {
                    "description": "Setting this to true also deploys the administration dashboard for this service.",
                    "type": "boolean"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "type": "string"
                        },
                        "repository": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        }
                    }
                },
                "imagePullSecrets": {
                    "type": "array"
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "nginx.ingress.kubernetes.io/proxy-read-timeout": {
                                    "type": "string"
                                }
                            }
                        },
                        "className": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "hostname": {
                            "type": "string"
                        }
                    }
                },
                "nodeSelector": {
                    "type": "object"
                },
                "podAnnotations": {
                    "type": "object"
                },
                "podSecurityContext": {
                    "type": "object"
                },
                "replicaCount": {
                    "type": "integer"
                },
                "resources": {
                    "type": "object"
                },
                "securityContext": {
                    "type": "object"
                },
                "serverConfig": {
                    "description": "The values for building the streamlit server config.",
                    "type": "object",
                    "properties": {
                        "address": {
                            "type": "string"
                        },
                        "port": {
                            "type": "string"
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "integer"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "create": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "tolerations": {
                    "type": "array"
                }
            }
        },
        "fullnameOverride": {
            "description": "Fully overrides the chart name",
            "type": "string"
        },
        "mongodb": {
            "description": "The configuration for the mongodb database. Refer to the subchart for more detailed description.",
            "type": "object",
            "properties": {
                "max_pool_size": {
                    "description": "Total number of open connections (active + idle) allowed in the pool.",
                    "type": "integer"
                },
                "min_pool_size": {
                    "description": "Minimum number of idle connections that will be maintained, even when the application is idle or under low load.",
                    "type": "integer"
                },
                "max_connecting": {
                    "description": "Controls the number of simultaneous new connection attempts being made.",
                    "type": "integer"
                },
                "architecture": {
                    "type": "string"
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "databases": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "passwords": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "rootPassword": {
                            "type": "string"
                        },
                        "rootUser": {
                            "type": "string"
                        },
                        "usernames": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "discoverable": {
                    "type": "object",
                    "properties": {
                        "allow": {
                            "type": "boolean"
                        }
                    }
                },
                "fullnameOverride": {
                    "type": "string"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "tag": {
                            "type": "string"
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "resourcePolicy": {
                            "description": "Set this to 'keep' to disable data pvc deletion when uninstalling the chart. Subsequent installs will use the same pvc, restoring the state of the server. Note: if the runtime_args.settings.develop_mode is set to True, the server state will be reset (default datasets and budgets).",
                            "enum": [
                                "",
                                "keep"
                            ],
                            "type": "string"
                        }
                    }
                },
                "replicaCount": {
                    "type": "integer"
                },
                "resources": {
                    "type": "object"
                },
                "security": {
                    "type": "object",
                    "properties": {
                        "networkPolicy": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "nameOverride": {
            "description": "Gives a name to this chart.",
            "type": "string"
        },
        "server": {
            "type": "object",
            "properties": {
                "affinity": {
                    "type": "object"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "pullPolicy": {
                            "type": "string"
                        },
                        "repository": {
                            "type": "string"
                        },
                        "tag": {
                            "type": "string"
                        }
                    }
                },
                "imagePullSecrets": {
                    "type": "array"
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "nginx.ingress.kubernetes.io/proxy-read-timeout": {
                                    "type": "string"
                                }
                            }
                        },
                        "className": {
                            "type": "string"
                        },
                        "enabled": {
                            "type": "boolean"
                        },
                        "hostname": {
                            "type": "string"
                        }
                    }
                },
                "nodeSelector": {
                    "type": "object"
                },
                "podAnnotations": {
                    "type": "object"
                },
                "podSecurityContext": {
                    "type": "object"
                },
                "replicaCount": {
                    "type": "integer"
                },
                "resources": {
                    "type": "object"
                },
                "runtime_args": {
                    "type": "object",
                    "properties": {
                        "settings": {
                            "type": "object",
                            "properties": {
                                "develop_mode": {
                                    "description": "When True, service database is reset to default user and dataset collections.",
                                    "type": "boolean"
                                },
                                "server": {
                                    "type": "object",
                                    "properties": {
                                        "host_ip": {
                                            "type": "string"
                                        },
                                        "host_port": {
                                            "type": "string"
                                        },
                                        "log_level": {
                                            "enum": [
                                                "notset",
                                                "debug",
                                                "info",
                                                "warning",
                                                "error",
                                                "critical"
                                            ],
                                            "type": "string"
                                        },
                                        "reload": {
                                            "type": "boolean"
                                        },
                                        "time_attack": {
                                            "type": "object",
                                            "properties": {
                                                "magnitude": {
                                                    "type": "integer"
                                                },
                                                "method": {
                                                    "enum": [
                                                        "jitter",
                                                        "stall"
                                                    ],
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "workers": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "submit_limit": {
                                    "type": "integer"
                                },
                                "dp_libraries": {
                                    "description": "Settings for DP libraries",
                                    "type": "object",
                                    "properties": {
                                        "opendp": {
                                            "description": "Settings for opendp library",
                                            "type": "object",
                                            "properties": {
                                                "contrib": {
                                                    "description": "Enable contrib feature",
                                                    "type": "boolean"
                                                },
                                                "floating_point": {
                                                    "description": "Enable floating-point feature",
                                                    "type": "boolean"
                                                },
                                                "honest_but_curious": {
                                                    "description": "Enable honest-but-curious feature",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                },
                                "private_db_credentials": {
                                    "description": "List of credentials to access private dataset",
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "db_type": {
                                                "type": "string",
                                                "description": "Type of the private database",
                                                "enum": ["S3_DB"]
                                            },
                                            "access_key_id": {
                                                "type": "string",
                                                "description": "Access key ID for the private database"
                                            },
                                            "secret_access_key": {
                                                "type": "string",
                                                "description": "Secret access key for the private database"
                                            },
                                            "credentials_name": {
                                                "type": "string",
                                                "description": "Unique name for the database credentials"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "securityContext": {
                    "type": "object"
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "integer"
                        },
                        "type": {
                            "type": "string"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object"
                        },
                        "create": {
                            "type": "boolean"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "tolerations": {
                    "type": "array"
                }
            }
        },
        "loki": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "integer",
                            "default": 3100
                        },
                        "target_port": {
                            "type": "integer",
                            "default": 3100
                        }
                    },
                    "required": ["port", "target_port"]
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "auth_enabled": {
                            "type": "boolean",
                            "default": false
                        },
                        "limits_config": {
                        "type": "object",
                        "properties": {
                            "allow_structured_metadata": {
                                "type": "boolean",
                                "default": true
                            },
                            "volume_enabled": {
                                "type": "boolean",
                                "default": true
                            }
                        },
                        "required": ["allow_structured_metadata", "volume_enabled"]
                        },
                        "server": {
                        "type": "object",
                            "properties": {
                                "http_listen_port": {
                                    "type": "integer",
                                    "default": 3100
                                }
                            },
                            "required": ["http_listen_port"]
                        },
                        "common": {
                            "type": "object"
                        },
                        "schema_config": {
                            "type": "object"
                        },
                        "storage_config": {
                            "type": "object"
                        },
                        "pattern_ingester": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "default": true
                                }
                            },
                            "required": ["enabled"]
                        }
                    }
                }
            }
        },
        "otel": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "object"
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "receiver": {
                            "type": "object",
                            "properties": {
                                "grpc_port": {
                                "type": "integer",
                                "default": 4317
                                },
                                "http_port": {
                                "type": "integer",
                                "default": 4318
                                }
                            },
                            "required": ["grpc_port", "http_port"]
                        },
                        "processors": {
                            "type": "object",
                            "properties": {
                                "batch": {
                                "type": "object",
                                "properties": {
                                    "timeout": {
                                    "type": "string",
                                    "pattern": "^[0-9]+[smhd]$",
                                    "default": "5s"
                                    }
                                },
                                "required": ["timeout"]
                                }
                            },
                            "required": ["batch"]
                        },
                        "extension": {
                            "type": "object",
                            "properties": {
                                "health_check_port": {
                                    "type": "integer",
                                    "default": 13133
                                },
                                "pprof_port": {
                                    "type": "integer",
                                    "default": 1777
                                },
                                "zpages_port": {
                                    "type": "integer",
                                    "default": 55679
                                }
                            }
                        }
                    },
                    "required": ["receiver", "processors", "extension"]
                }
            },
            "required": ["service", "config"]
        },
        "prometheus": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "integer",
                            "default": 9091
                        },
                        "target_port": {
                            "type": "integer",
                            "default": 9091
                        }
                    },
                    "required": ["port", "target_port"]
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "scrape_interval": {
                            "type": "string",
                            "pattern": "^[0-9]+[smhd]$",
                            "default": "10s"
                        },
                        "evaluation_interval": {
                            "type": "string",
                            "pattern": "^[0-9]+[smhd]$",
                            "default": "10s"
                        }
                    },
                    "required": ["scrape_interval", "evaluation_interval"]
                }
            },
            "required": ["service", "config"]
        },
        "tempo": {
            "type": "object",
            "properties": {
                "service": {
                    "type": "object",
                    "properties": {
                        "type": { "type": "string" }
                    },
                    "required": ["type"]
                },
                "fullnameOverride": { "type": "string" },
                "server": {
                    "type": "object",
                    "properties": {
                        "http_listen_port": { "type": "integer" }
                    },
                    "required": ["http_listen_port"]
                },
                "ingester": {
                    "type": "object",
                    "properties": {
                        "max_block_duration": { "type": "string" }
                    },
                    "required": ["max_block_duration"]
                },
                "storage": {
                    "type": "object"
                },
                "receivers": {
                    "type": "object",
                    "properties": {
                        "otlp": {
                        "type": "object",
                        "properties": {
                            "protocols": {
                            "type": "object",
                            "properties": {
                                "grpc": {
                                    "type": "object",
                                    "properties": {
                                        "endpoint": { "type": "string" }
                                    },
                                    "required": ["endpoint"]
                                },
                                "http": {
                                    "type": "object",
                                    "properties": {
                                        "endpoint": { "type": "string" }
                                    },
                                    "required": ["endpoint"]
                                }
                            },
                            "required": ["grpc", "http"]
                            }
                        },
                        "required": ["protocols"]
                        }
                    },
                    "required": ["otlp"]
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": { "type": "boolean" }
                    },
                    "required": ["enabled"]
                }
            },
            "required": ["service", "server", "ingester", "storage", "receivers", "persistence"]
        },
        "grafana": {
            "type": "object",
            "properties": {
                "service": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": ["ClusterIP", "NodePort", "LoadBalancer"]
                    },
                    "port": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 65535
                    }
                },
                "required": ["type", "port"]
                },
                "fullnameOverride": {
                    "type": "string"
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean"
                        },
                        "namespaced": {
                            "type": "boolean"
                        }
                    },
                    "required": ["create", "namespaced"]
                },
                "datasources": {
                "type": "object",
                "properties": {
                    "datasources.yaml": {
                        "type": "object",
                        "properties": {
                            "apiVersion": {
                                "type": "integer"
                            },
                            "datasources": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "type": {
                                    "type": "string"
                                },
                                "uid": {
                                    "type": "string"
                                },
                                "access": {
                                    "type": "string",
                                    "enum": ["proxy", "direct"]
                                },
                                "orgId": {
                                    "type": "integer"
                                },
                                "url": {
                                    "type": "string",
                                    "format": "uri"
                                },
                                "editable": {
                                    "type": "boolean"
                                },
                                "jsonData": {
                                    "type": "object"
                                },
                                "secureJsonData": {
                                    "type": "object"
                                }
                                },
                                "required": ["name", "type", "uid", "access", "orgId", "url", "basicAuth", "isDefault", "version", "editable"]
                            }
                            }
                        },
                        "required": ["apiVersion", "datasources"]
                        }
                    },
                    "required": ["datasources.yaml"]
                },
                "env": {
                "type": "object",
                "properties": {
                    "GF_SECURITY_ADMIN_USER": {
                        "type": "string"
                    },
                    "GF_SECURITY_ADMIN_PASSWORD": {
                        "type": "string"
                    }
                },
                "required": ["GF_SECURITY_ADMIN_USER", "GF_SECURITY_ADMIN_PASSWORD"]
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "hosts": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "hostname"
                            }
                        },
                        "paths": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "required": ["enabled", "hosts"]
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        }
                    },
                    "required": ["enabled"]
                }
            },
            "required": ["service", "fullnameOverride", "rbac", "datasources", "env", "ingress", "persistence"]
        }
    }
}
