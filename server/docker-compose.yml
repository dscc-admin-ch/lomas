services:
  lomas_core:
    image: dsccadminch/lomas_core
    build:
      dockerfile: ../core/Dockerfile
      target: lomas_core
      context: ../core/
    container_name: lomas_core
    volumes:
      - ./lomas_core:/code/lomas_core
    networks:
      - lomas-network

  lomas_server:
    image: dsccadminch/lomas_server_dev
    build:
      dockerfile: ./Dockerfile
      target: lomas_server_dev
      context: .
    container_name: lomas_server_dev
    ports:
      - 80:80
    restart: always
    volumes:
      - ./lomas_server:/code/lomas_server
      - ./configs/example_config.yaml:/usr/lomas_server/runtime.yaml
      - ./configs/example_secrets.yaml:/usr/lomas_server/secrets.yaml
      - ./data/collections/metadata:/data/collections/metadata/
      - ./data/collections/dataset_collection_local.yaml:/data/collections/dataset_collection.yaml
      - ./data/collections/user_collection.yaml:/data/collections/user_collection.yaml
    depends_on:
      minio-client:
        condition: service_completed_successfully
        restart: true
      mongodb:
        condition: service_started
        restart: true
      lomas_core:
        condition: service_completed_successfully
    networks:
      - lomas-network

  mongodb:
    container_name: mongodb
    image: mongodb/mongodb-community-server:6.0-ubi8
    # Use only if volume is not a docker volume but a bind mount (e.g. ./data/:/data/db/)
    # The reason has to do with permissions (see https://stackoverflow.com/questions/29245216/write-in-shared-volumes-docker/29251160#29251160)
    # Still unclear why just setting chmod 777 ./data does not solve the issue.
    #user: 1000:1000
    ports:
      - 27017:27017
    networks:
      - lomas-network
    volumes:
      - mongodata:/data/db/
      - ./configs/mongodb_init.js:/docker-entrypoint-initdb.d/mongodb_init.js:ro
    # We use this in docker compose to have a user/password for mongodb
    # Proper deployment on a kubernetes cluster should use a helm chart
    # and parametrize a user specific to the fastAPI server.
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=root
      - MONGODB_INITDB_ROOT_PASSWORD=root_pwd
      - MONGODB_INITDB_DATABASE=defaultdb
      # add user https://stackoverflow.com/questions/42912755/how-to-create-a-db-for-mongodb-container-on-start-up/54064268#54064268

  minio:
    container_name: minio
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    command: server /data
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123
      - MINIO_CONSOLE_ADDRESS=:9001
    volumes:
      - minio-data:/data
    networks:
      - lomas-network

  minio-client:
    container_name: minio-client
    image: minio/mc
    depends_on:
      - minio
    entrypoint: /bin/sh -c "
      sleep 15 && 
      mc alias set myminio http://minio:9000 admin admin123 && 
      mc mb myminio/example || true && 
      mc cp /data/datasets/titanic.csv myminio/example/data/titanic.csv &&
      mc cp /data/collections/metadata/titanic_metadata.yaml myminio/example/metadata/titanic_metadata.yaml &&
      mc ls --recursive --versions myminio/example"
    volumes:
      - ./data/:/data
    networks:
      - lomas-network

  lomas_admin_dashboard:
    image: dsccadminch/lomas_admin_dashboard_dev
    build:
      dockerfile: ./Dockerfile
      target: lomas_admin_dashboard_dev
    container_name: lomas_admin_dashboard_dev
    ports:
      - 8501:8501
    restart: always
    volumes:
      - ./lomas_server:/code/lomas_server
      - ./configs/example_config.yaml:/usr/lomas_server/runtime.yaml
      - ./configs/example_secrets.yaml:/usr/lomas_server/secrets.yaml
      - ./configs/example_dashboard_config.yaml:/usr/lomas_dashboard/dashboard.yaml
      - ./configs/example_dashboard_server_config.toml:/code/.streamlit/config.toml
      - ./data/:/data/
    depends_on:
      - lomas_server
    networks:
      - lomas-network

  client:
    image: dsccadminch/lomas_client_dev
    build:
      dockerfile: ../client/Dockerfile
      target: lomas_client_dev
      context: ../client/
    container_name: lomas_client
    ports:
      - 8888:8888
    volumes:
      - ../client/:/code/
      - ./data/:/data/
      - ../client/configs/:/root/.jupyter/
    depends_on:
      - lomas_server
      - lomas_core
    networks:
      - lomas-network

networks:
  lomas-network:
    driver: bridge

volumes:
  # These volumes needs to be setup only once with "docker volume create <volume_name>"
  # They will be stored in /var/lib/docker/volumes and managed by docker.
  mongodata:
    external: true
  minio-data:
    external: true


